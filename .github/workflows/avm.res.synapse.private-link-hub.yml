name: "avm.res.synapse.private-link-hub"

on:
  workflow_dispatch:
    inputs:
      erports:
        description: 'Comma-separated list of ERPort values'
        required: true
        default: 'ERPort1,ERPort2'

jobs:
  checkout:
    name: "Checkout Repository"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0



  prepare-matrix:
    name: "Prepare Matrix for ERPort Sequence"
    runs-on: ubuntu-latest
    needs: checkout
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        shell: pwsh
        run: |
          $erports = "${{ github.event.inputs.erports }}"
          $erportsArray = $erports -split ',' | ForEach-Object { $_.Trim() }
          $matrixMetadataArray = $erportsArray | ConvertTo-Json -AsArray -Compress
          Write-Host "Matrix Metadata: $matrixMetadataArray"
          Add-Content -Path $env:GITHUB_OUTPUT -Value "matrix=$matrixMetadataArray"

  fanout:
    name: "Fanout for ERPort Sequence"
    needs: prepare-matrix
    permissions:
      id-token: write
      contents: read
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }} # Unique concurrency group for subscriptions with similar workload identifier (e.g. "pxs-azure-fferrara")
    strategy:
      matrix:
        erport: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }} #[ERPort1, ERPort2]
    uses: ./.github/workflows/erport-sequence.yml #@users/tomlakar/synapse-sql-pool-dev
    with:
      erport: ${{ matrix.erport }}


# on:
#   workflow_dispatch:
#     inputs:
#       staticValidation:
#         type: boolean
#         description: "Execute static validation"
#         required: false
#         default: true
#       deploymentValidation:
#         type: boolean
#         description: "Execute deployment validation"
#         required: false
#         default: true
#       removeDeployment:
#         type: boolean
#         description: "Remove deployed module"
#         required: false
#         default: true
#       customLocation:
#         type: string
#         description: "Default location overwrite (e.g., eastus)"
#         required: false
#   push:
#     branches:
#       - main
#     paths:
#       - ".github/actions/templates/avm-**"
#       - ".github/workflows/avm.template.module.yml"
#       - ".github/workflows/avm.res.synapse.private-link-hub.yml"
#       - "avm/res/synapse/private-link-hub/**"
#       - "utilities/pipelines/**"
#       - "!utilities/pipelines/platform/**"
#       - "!*/**/README.md"

# env:
#   modulePath: "avm/res/synapse/private-link-hub"
#   workflowPath: ".github/workflows/avm.res.synapse.private-link-hub.yml"

# concurrency:
#   group: ${{ github.workflow }}

# jobs:
#   ###########################
#   #   Initialize pipeline   #
#   ###########################
#   job_initialize_pipeline:
#     runs-on: ubuntu-latest
#     name: "Initialize pipeline"
#     steps:
#       - name: "Checkout"
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#       - name: "Set input parameters to output variables"
#         id: get-workflow-param
#         uses: ./.github/actions/templates/avm-getWorkflowInput
#         with:
#           workflowPath: "${{ env.workflowPath}}"
#       - name: "Get module test file paths"
#         id: get-module-test-file-paths
#         uses: ./.github/actions/templates/avm-getModuleTestFiles
#         with:
#           modulePath: "${{ env.modulePath }}"
#     outputs:
#       workflowInput: ${{ steps.get-workflow-param.outputs.workflowInput }}
#       moduleTestFilePaths: ${{ steps.get-module-test-file-paths.outputs.moduleTestFilePaths }}
#       psRuleModuleTestFilePaths: ${{ steps.get-module-test-file-paths.outputs.psRuleModuleTestFilePaths }}
#       modulePath: "${{ env.modulePath }}"

#   ##############################
#   #   Call reusable workflow   #
#   ##############################
#   call-workflow-passing-data:
#     name: "Run"
#     permissions:
#       id-token: write # For OIDC
#       contents: write # For release tags
#     needs:
#       - job_initialize_pipeline
#     uses: ./.github/workflows/avm.template.module.yml
#     with:
#       workflowInput: "${{ needs.job_initialize_pipeline.outputs.workflowInput }}"
#       moduleTestFilePaths: "${{ needs.job_initialize_pipeline.outputs.moduleTestFilePaths }}"
#       psRuleModuleTestFilePaths: "${{ needs.job_initialize_pipeline.outputs.psRuleModuleTestFilePaths }}"
#       modulePath: "${{ needs.job_initialize_pipeline.outputs.modulePath}}"
#     secrets: inherit
